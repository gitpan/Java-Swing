Is is possible to have the java code generated and bound at run time?

PerlActionListener.java is need not be unique.  Rerun all generations
with this in mind.  In other words, if a generated solution is needed,
it should still have get/set for the sender/callback and a no arg constructor.
This will allow all classes to work like ActionListener to avoid strangeness.

The fake module loader assumes all java modules are in javax.swing.
Some are in java.awt, etc.  Make a way for the PerlFakePackages to
specify the package name, making javax.swing the default.
    Done

There is an error in the Listeners:
    At the bottom of the _...Listener handler, the callback call has
    $sender, $event, but $sender is not in scope and no strict is killing
    the error.
    Can we go with strict, since the method is a code reference?
    Should we store the sender so that it can be passed back at that point?
    Is there any point to storing the listeners?

Add a test to see if Timer will work with existing connect( 'ActionListener'...
Ideas:
Perhaps the autogenerated modules should be generated on the fly instead
of shipping with the module.  This would greatly reduce clutter in the
shipped module and in the index on CPAN.  Issues:
    1. can I create a substitue for use Inline Java => 'STUDY' ...
       namely, is there a way to use do to accomplish the same thing
       during autoload?
    2. listener generation still requires a list of methods (since there
       must be a listener coded in java).  Is there a way to use Java
       reflection on Adapter classes to avoid this requirement?

Remaining problems with listener generation:
1   extends clauses for listener interfaces currently only allow one parent
2   while the same is true for throws clauses on event methods, none are
    currently failing as a result
Generate Perl modules for selected awt classes, notably the layout managers
    In particular, make a procedural interface for GridBagConstraints.

Document
    Including name conflicts unresolved and other classes unimplemented

Done
Make constructors take named arguments.
Make a small, but useful example (like the expression calculator).
Add lots more classes (possibly through generation).
Correct problems with these awt listeners:
    AWTEventListener
    DragSourceListener
    DropTargetListener
Generate the swing listeners
